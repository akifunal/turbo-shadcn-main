# EXAMPLE USAGE:
#
#   Refer for explanation to following link:
#   https://github.com/evilmartians/lefthook/blob/master/docs/configuration.md
#
# pre-push:
#   commands:
#     packages-audit:
#       tags: frontend security
#       run: yarn audit
#     gems-audit:
#       tags: backend security
#       run: bundle audit
#
# pre-commit:
#   parallel: true
#   commands:
#     eslint:
#       glob: "*.{js,ts,jsx,tsx}"
#       run: yarn eslint {staged_files}
#     rubocop:
#       tags: backend style
#       glob: "*.rb"
#       exclude: "application.rb|routes.rb"
#       run: bundle exec rubocop --force-exclusion {all_files}
#     govet:
#       tags: backend style
#       files: git ls-files -m
#       glob: "*.go"
#       run: go vet {files}
#   scripts:
#     "hello.js":
#       runner: node
#     "any.go":
#       runner: go run

# pre-commit:
#     commands:
#         testing:
#             run: npm test

# pre-push:
#     commands:
#         anotherTesting:
#             run: npm test

# pre-commit:
#     parallel: true
#     commands:
#         lint:
#             glob: '*.{js,ts,jsx,tsx}'
#             run: pnpm eslint {staged_files} --fix && git add {staged_files}
#         format:
#             glob: '*.{js,ts,jsx,tsx,cjs,mjs,md,json}'
#             run: pnpm prettier {staged_files} -w && git add {staged_files}
#         types:check:
#             glob: '*.{ts,tsx}'
#             run: pnpm tsc --noEmit

pre-commit:
    parallel: true
    commands:
        lint:fix:
            run: pnpm lint:fix
        format:fix:
            run: pnpm format:fix
        types:check:
            run: pnpm types:check

post-commit:
    commands:
        testing:
            run: npm test

# # Use this to build commit messages
# prepare-commit-msg:
#     commands:
#         commitzen:
#             interactive: true
#             run: LEFTHOOK=0 pnpm cz

commit-msg:
    commands:
        'lint commit message':
            run: pnpm commitlint --edit {1}
